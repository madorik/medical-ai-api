# AI Learning API - Environment Variables
# 이 파일을 복사해서 .env 파일을 만들고 실제 값으로 채워주세요

# 서버 설정
PORT=3000
NODE_ENV=development

# Google OAuth 2.0 설정
# https://console.developers.google.com 에서 발급받으세요
GOOGLE_CLIENT_ID=your-google-client-id
GOOGLE_CLIENT_SECRET=your-google-client-secret
GOOGLE_CALLBACK_URL=http://localhost:3000/auth/google/callback

# OpenAI API 설정
# https://platform.openai.com/api-keys 에서 발급받으세요
OPENAI_API_KEY=your-openai-api-key

# Supabase 설정
# https://supabase.com 에서 프로젝트 생성 후 발급받으세요
SUPABASE_URL=https://your-project.supabase.co
SUPABASE_ANON_KEY=your-supabase-anon-key

# JWT 토큰 설정
JWT_SECRET=your-super-secret-jwt-key-change-this-in-production

# 세션 설정
SESSION_SECRET=your-session-secret-key-change-this-in-production

# 프론트엔드 URL (CORS 설정용)
FRONTEND_URL=http://localhost:3000

# ================================================================
# 🛠️ 설정 가이드
# ================================================================

# 1. Google OAuth 설정:
#    - Google Cloud Console (https://console.cloud.google.com) 접속
#    - 새 프로젝트 생성 또는 기존 프로젝트 선택
#    - API 및 서비스 > 사용자 인증 정보 > OAuth 2.0 클라이언트 ID 생성
#    - 승인된 리디렉션 URI: http://localhost:3000/auth/google/callback

# 2. OpenAI API 설정:
#    - OpenAI Platform (https://platform.openai.com) 계정 생성
#    - API Keys 메뉴에서 새 API 키 생성
#    - 사용량 제한 및 결제 방법 설정

# 3. Supabase 설정:
#    - Supabase (https://supabase.com) 계정 생성
#    - 새 프로젝트 생성
#    - Settings > API에서 URL과 anon key 복사
#    - SQL Editor에서 database/schema.sql 실행

# 4. JWT Secret:
#    - 보안을 위해 복잡한 랜덤 문자열 사용
#    - 온라인 JWT Secret 생성기 활용 가능

# 5. 프로덕션 환경:
#    - 모든 secret 값들을 안전하게 변경
#    - HTTPS 사용 설정
#    - 도메인에 맞게 URL 수정 